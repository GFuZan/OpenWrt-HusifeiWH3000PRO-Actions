From 9f08ee7f19ed8ab3f749810535a3f07d82ab41fe Mon Sep 17 00:00:00 2001
From: gfuzan <gfuzan@163.com>
Date: Tue, 29 Jul 2025 22:21:21 +0800

diff --git a/drivers/hwmon/pwm-fan.c b/drivers/hwmon/pwm-fan.c
index b67bc9e833c0..614b675c0de2 100644
--- a/drivers/hwmon/pwm-fan.c
+++ b/drivers/hwmon/pwm-fan.c
@@ -50,6 +50,7 @@ struct pwm_fan_ctx {
 	struct pwm_fan_tach *tachs;
 	ktime_t sample_start;
 	struct timer_list rpm_timer;
+	struct timer_list init_timer;  // 新增：用于延时初始化的定时器
 
 	unsigned int pwm_value;
 	unsigned int pwm_fan_state;
@@ -231,6 +232,12 @@ static int set_pwm(struct pwm_fan_ctx *ctx, unsigned long pwm)
 	return ret;
 }
 
+static void delayed_pwm_init(struct timer_list *t)
+{
+    struct pwm_fan_ctx *ctx = from_timer(ctx, t, init_timer);	
+	set_pwm(ctx, 0);
+}
+
 static void pwm_fan_update_state(struct pwm_fan_ctx *ctx, unsigned long pwm)
 {
 	int i;
@@ -627,18 +634,24 @@ static int pwm_fan_probe(struct platform_device *pdev)
 		return ret;
 
 	ctx->pwm_fan_state = ctx->pwm_fan_max_state;
-	if (IS_ENABLED(CONFIG_THERMAL)) {
-		cdev = devm_thermal_of_cooling_device_register(dev,
-			dev->of_node, "pwm-fan", ctx, &pwm_fan_cooling_ops);
-		if (IS_ERR(cdev)) {
-			ret = PTR_ERR(cdev);
-			dev_err(dev,
-				"Failed to register pwm-fan as cooling device: %d\n",
-				ret);
-			return ret;
-		}
-		ctx->cdev = cdev;
-	}
+	// if (IS_ENABLED(CONFIG_THERMAL)) {
+	// 	cdev = devm_thermal_of_cooling_device_register(dev,
+	// 		dev->of_node, "pwm-fan", ctx, &pwm_fan_cooling_ops);
+	// 	if (IS_ERR(cdev)) {
+	// 		ret = PTR_ERR(cdev);
+	// 		dev_err(dev,
+	// 			"Failed to register pwm-fan as cooling device: %d\n",
+	// 			ret);
+	// 		return ret;
+	// 	}
+	// 	ctx->cdev = cdev;
+	// }
+
+	// 初始化延时定时器
+	timer_setup(&ctx->init_timer, delayed_pwm_init, 0);
+
+	// 设置定时器在1.5秒后执行（HZ为内核时钟频率，通常1000Hz即1ms精度）
+	mod_timer(&ctx->init_timer, jiffies * (HZ * 3 / 2));
 
 	return 0;
 }


